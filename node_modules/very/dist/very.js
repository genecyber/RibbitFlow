(function() {
  var domEventsList, very;

  domEventsList = ['Abort', 'Blur', 'CanPlay', 'CanPlayThrough', 'Change', 'Click', 'ContextMenu', 'Copy', 'CueChange', 'Cut', 'DblClick', 'Drag', 'DragEnd', 'DragEnter', 'DragLeave', 'DragOver', 'DragStart', 'Drop', 'DurationChange', 'Emptied', 'Ended', 'Error', 'Focus', 'Input', 'Invalid', 'KeyDown', 'KeyPress', 'KeyUp', 'LoadedData', 'LoadedMetaData', 'LoadStart', 'MouseDown', 'MouseMove', 'MouseOut', 'MouseOver', 'MouseUp', 'Paste', 'Pause', 'Play', 'Playing', 'Progress', 'RateChange', 'Reset', 'Scroll', 'Search', 'Seeked', 'Seeking', 'Select', 'Show', 'Stalled', 'Submit', 'Suspend', 'TimeUpdate', 'Toggle', 'VolumeChange', 'Waiting', 'Wheel'];

  very = function(object, element) {
    var list, removeEventListeners;
    list = domEventsList.filter(function(item) {
      return object["on" + item] != null;
    });
    removeEventListeners = list.map(function(item) {
      var boundFunction, lowerCaseName;
      lowerCaseName = item.toLowerCase();
      boundFunction = object["on" + item].bind(object);
      element.addEventListener(lowerCaseName, boundFunction);
      return function() {
        return element.removeEventListener(lowerCaseName, boundFunction);
      };
    });
    return function() {
      return removeEventListeners.forEach(function(fn) {
        return fn();
      });
    };
  };

  if ((typeof module !== "undefined" && module !== null ? module.exports : void 0) != null) {
    module.exports = very;
  } else {
    this.very = very;
  }

}).call(this);
